@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans&display=swap');

/* Para no olvidarme q existe */
/* :root {
} */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


/* +Defaults */
  html {
    font-family: 'Open Sans', Arial, Helvetica, sans-serif;
  }

  body {
    background-color: #6296BA;
    display: flex;
    flex-direction: column;
    justify-items: center;/* Aquí primero no estoy completamente seguro si deberia usar flexbox por defecto para Mobile First y segundo no estoy seguro si usar items o content para body o ambos?  */
    align-items: center;
  }

  body p {
    color: #222;
  }

  body h2, body h3, body h4 {
    color: #F2FBFF;
  }
/* + */


/* +Header */
  header {
    width: 100%;
    height: 4rem; /* Aquí dudo si esto es lo correcto, el objetivo es q siempre sean legibles las letras de la nav y ajustar el logo acorde. */
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }

  header .logo {
    height: 100%;
    /* display: block; ¿Necesito de esto? */ /* ¿Hubiera sido encerrar la <a> en una div en vez d combertir todo a block? */
  }

  header nav {
    width: auto;
    margin-left: 2px;
  }

  header nav ul {
    width: 100%;
    /* background-color: royalblue; */
    list-style: none;
    display: flex;
    flex-direction: row;
    justify-items: space-evenly;
    align-items: space-evenly;
    /* align-content: space-between; */ /* aumebntar el espacio entre links */
    /* agregar evenly? */
    column-gap: 4px;
  }

  header nav ul li {
    /* display: inline-block;*/ /* ¿Es necesario? */
    border: 2px solid #F2FBFF;
    border-radius: 10px;
    /* font-size: 1.5rem; */
    text-align: center;
    text-justify: center;
    padding: 2%;
  }

  header nav ul li a {
    color: #F2FBFF;
    text-decoration: none;
  }

  header nav a:hover {
    color: #EEE8A9;
  }
/* + */


/* +Main */
/* Puesto asi para q sea por defecto para todas las secciones. */
  main {
    width: 90%;
    /* margin: 0 5%; */ /* Borrar esto y acomodar bien con flexbox primero, usando un container dentro de main para el contenido o darle flex a todo el body */
    margin-top: 10px;
    margin-bottom: 100px; /* Para separar en todas las pag el Footer del contenido */
    display: flex;
    flex-direction: column;/* Arreglar error para q no quede corrido sobre la izquierda */
    justify-items: center;
    align-items: center;
    /* justify-content: center;
    align-content: center; *//* Tal vez necesite estas 2 aquí también */
  }

  main section {
    width: 100%;
    height: auto;
    box-shadow: 3px 3px 2px 4px rgba(34, 34, 34, 0.600); /* es #222 con 0.6 de alpha */
    border-radius: 4px;
    padding: 5px;
    margin: 10px 0px;
  }
/* + */


/* +Footer */
  footer {
    display: flex;
    flex-direction: column;
    justify-items: center;
    align-items: center;
  }
  footer .mail-to {
    color: #F2FBFF;
    text-align: center;
  }

  footer p {
    color: #F2FBFF;
    text-align: center;
  }
/* + */


/* +Index */
  /* section.index {
    Sacar border, usar shadow pero solo de der y bot
    border: 1px solid #222;
    box-shadow: 0px 0px 1px 1px #222;
    padding: 5px;
    margin: 20px 0px;
  } */
/* + */


/* +Products */
  .products-table {
    width: 100%;
    height: 100%;
  }
/* + */


/* +Services */
  /* section.services {
    border: 2px solid black;
  }

  section.testimonials {
    border: 2px solid black;
  } */
/* + */


/* +p-mainGrid */
  /* A futuro pensar, 3 medidas de celulares, 2 de phablets, 4 de tablets, 2 de notebook 16:10 y 16:9, 4 de PC, 4 de TV, 2 cuadradas universales para todos los dispositivos q usen pantallas cuadradas. ¿Tiene algo de sentido lo q puse recien o solo estoy desperdiciando tiempo? ¿Hay algun sitio q haga analisis y me diga a q apuntar para X producto/tipo de pagina? */
  /* @media only screen and (min-width:600px) {
    main.p-mainGrid {
      grid-template-areas:
        " liveFeed"
        "news liveFeed"
      ;
      grid-template-columns: auto auto;
      grid-template-rows: auto auto;
    }
  } */

  @media only screen and (min-width:1024px) {
    main.p-mainGrid {
      /* flex: none; */ /* ¿Es necesario? */
      display: grid;
      gap: 20px;
      grid-template-areas:
        "sec1 aside"
        "sec2 aside"
      ;
      /* align-items: center; */
      /* justify-items: center; */
    }

    main section {
      margin: 0px 0px;
    }
  }

  section.sec1 {
    grid-area: sec1;
  }
  section.sec2 {
    grid-area: sec2;
  }
  section.aside {
    grid-area: aside;
  }
/* + */


/* +Grid Borrar Luego */
  .gridCard {
    border: 2px solid #EEE8A9;
  }

  .gridCard > h3 {
    border: 2px solid #EEE8A9; /* Quedo mal, pero cuadno puse justify y align en center no molesto el efecto */
  }

  .gridCard > img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: all 300ms;
  }

  .gridCard > img:hover {
    transform: scale(1.3);
    transition: all 300ms;
    overflow: visible; /* Si no usaba esto perdia parte de las imagenes que eran tenian un largo conciderable, ¿Es la forma correcta? Parece medio rebuscado */
    /* box-sizing: content-box; */
    border: 3px solid #222; /* No entiendo el resultado de este borde, lo deje como error para ver si me lo puede explicar, mi idea era q cuando se agrandase tenga un borde que tape un poco el contenido asi era consistente ya q algunas imagenes lo tienen mal cortado */
  }

  .teamGrid {
    box-shadow: none;
    display: grid;
    grid-column-gap: 5px;
    grid-row-gap: 5px;
    justify-items: center;
    align-items: center; /* Para emprolijar más tendria q usar un div o darle una clase al main de este html, asignarle width y height y usar align/justify content? */
    grid-template-areas:
      "tierA1 tierA2 tierA3"
      "tierB1 emptyG tierB3" /* Aqui quiciera usar " . " o " none " sin crear una div en vez de emptyG pero no me esta saliendo y aun no busque q diferencia hay en el uso de esos 2 valores epseciales*/
      "tierC1 tierC2 tierC3"
    ;
  }

  .tierA1 {
    grid-area: tierA1;
  }
  .tierA2 {
    grid-area: tierA2;
  }
  .tierA3 {
    grid-area: tierA3;
  }
  .tierB1 {
    grid-area: tierB1;
  }
  .emptyG {
    grid-area: emptyG;
    background-color: #222;
    justify-self: stretch; /* Todo esto en realidad buscaria saltarlo y q quedase sin nada, o sea q se viera el fondo */
    align-self: stretch;
  }
  .tierB3 {
    grid-area: tierB3;
  }
  .tierC1 {
    grid-area: tierC1;
  }
  .tierC2 {
    grid-area: tierC2;
  }
  .tierC3 {
    grid-area: tierC3;
  }
/* + */


/* ¿Alguna pagina web para ver best practices de como organizar el codigo con comentarios o manifesto? Estoy probadno con distintos formatos a ver q me resulta más comodo */
