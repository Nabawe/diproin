/* +Grid Borrar Luego */
  .gridCard {
    border: 2px solid #EEE8A9;
  }

  .gridCard > h3 {
    border: 2px solid #EEE8A9; /* Quedo mal, pero cuadno puse justify y align en center no molesto el efecto */
  }

  .gridCard > img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: all 300ms;
  }

  .gridCard > img:hover {
    transform: scale(1.3);
    transition: all 300ms;
    overflow: visible; /* Si no usaba esto perdia parte de las imagenes que eran tenian un largo conciderable, ¿Es la forma correcta? Parece medio rebuscado */
    /* box-sizing: content-box; */
    border: 3px solid #222; /* No entiendo el resultado de este borde, lo deje como error para ver si me lo puede explicar, mi idea era q cuando se agrandase tenga un borde que tape un poco el contenido asi era consistente ya q algunas imagenes lo tienen mal cortado */
  }
  .teamGrid {
    box-shadow: none;
    display: grid;
    grid-column-gap: 5px;
    grid-row-gap: 5px;
    justify-items: center;
    align-items: center; /* Para emprolijar más tendria q usar un div o darle una clase al main de este html, asignarle width y height y usar align/justify content? */
    grid-template-areas:
      "tierA1 tierA2 tierA3"
      "tierB1 emptyG tierB3" /* Aqui quiciera usar " . " o " none " sin crear una div en vez de emptyG pero no me esta saliendo y aun no busque q diferencia hay en el uso de esos 2 valores epseciales*/
      "tierC1 tierC2 tierC3"
    ;
  }

  .tierA1 {
    grid-area: tierA1;
  }
  .tierA2 {
    grid-area: tierA2;
  }
  .tierA3 {
    grid-area: tierA3;
  }
  .tierB1 {
    grid-area: tierB1;
  }
  .emptyG {
    grid-area: emptyG;
    background-color: #222;
    justify-self: stretch; /* Todo esto en realidad buscaria saltarlo y q quedase sin nada, o sea q se viera el fondo */
    align-self: stretch;
  }
  .tierB3 {
    grid-area: tierB3;
  }
  .tierC1 {
    grid-area: tierC1;
  }
  .tierC2 {
    grid-area: tierC2;
  }
  .tierC3 {
    grid-area: tierC3;
  }
/* + */